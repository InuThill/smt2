#summary This an introductory page for describing the new smt2 version
#labels Featured

= Requirements =

Your Web server needs a *MySQL 5* database and *PHP 5* installed with the libraries *cURL* and *json*. These settings are very common on most Web servers. If you don't know if your server has these requirements, you will be advised when installing the system.


= Download =

You can download all the project files (production, sources, documentation, etc.) from  [http://code.google.com/p/smt2/downloads/list GoogleCode SVN].

Until 2011, downloads were also available as ZIP files. However it was cumbersome to keep them updated, so now you need an SVN client to grab the code.

The project contains the following items:
 * The production version, ready for using on your webserver.
 * The sources and API documentation. They are located in: 
  # `core/js/src`
  # `core/swf/src`
  # `admin/ext/documentation`

You may want to avoid uploading the sources to your server, as they are not needed in production and therefore you will save disk space (like 4 MB or so).


= Installing =

The installation process is very similar to the well-known WordPress Content Management System (CMS), so the learning curve is supposed to be very soft.

It is recommended to put the system in a directory named `/smt2` on your localhost or production server, although any other directory name is ok as long as you configure properly both `config.php` and the argument of `smt.record()` function. NOTE: If you put `config.php` in a directory name that contains the string "smt2", then it will be recognized automatically by the recording script.


== Steps ==

First of all, you must configure the basic stuff by editing the file `config.php`. Then, just upload the `smt2` folder to your Web server.

Assuming that you've uploaded the files to a server called `mysite.com`:

 # Open your Web browser and navigate to the URL `http://mysite.com/smt2/admin/sys/install.php`.
 # Enter your email and click the `Install` button. That email will be used to send you the root password.
 # Once the installation process finishes, copy the generated password and log in (your username is *root*) to the CMS. You can change that password on the _users_ section.

=== Upgrading ===

If you already have a previous 2.x version installed, you can overwrite such installation with the new files and then update your database info by navigating to the URL `http://mysite.com/smt2/admin/sys/upgrade.php`.


= Uninstalling =

Just go to the URL `http://mysite.com/smt2/admin/sys/uninstall.php` and follow the instructions.


= Including the recording script on your page(s) =

You must add the following 2 lines either to the HEAD or the BODY sections of each document that you wish to track:
{{{
<script type="text/javascript" src="/smt2/core/js/smt-aux.min.js"></script>  
<script type="text/javascript" src="/smt2/core/js/smt-record.min.js"></script>
}}}
Note that order is mandatory: aux functions first.


= Customizing the recording options =

== Current version (2.1.0) ==

These are the *default* (smt)^2^ recording options that you can customize:
{{{
// Tracking frequency, in frames per second.      
fps: 24, 	
// Tracking timeout, in seconds.
recTime: 120, 
// Interval to send data, in seconds
postInterval: 2,
// URL to local website, i.e., the site URL to track (with the smt*.js files). The record script will try to find it automatically.
trackingServer: "/smt2/", 
// URL to remote server, i.e., the site URL where the logs will be stored, and (of course) the smt2 CMS is installed.
storageServer: "",
// You may choose to advice users (or not) that their mouse activity is going to be logged. 
warn: false, 
// Text to display when advising users (if warn is set to true).
warnText: "We'd like to track your mouse activity\nin order to improve this website's usability.\nDo you agree?", 
// Cookies lifetime (in days) to reset both first time users and agreed-to-track visitors
cookieDays: 365,
// Recording can stop/resume on blur/focus to save space in your DB
contRecording: true,
// Random user selection. Setting it to false (or 0) means that all the population will be tracked.      
disabled: 0 //Math.round(Math.random()) // <-- random sampling is recommended!
}}}

To override these defaults you do not need to edit manually the record script, just keep reading these instructions. 

=== Important new feature: cross-domain POSTs ===
In version 2.0.2 two variables were introduced to customize the recording script: `trackingServer` and `storageServer`. 
In this way one can record mouse activity in domain A, and post data to a domain B. 
To achieving that goal, just type in `storageServer` the URL of the server where both the CMS and the database are installed (following the previous naming convention, it would be server B), and put the `core` dir in the domain that you wish to track (server A). 
So, one can have only one domain (server B) for storing and managing logs/users/etc., and multiple domains to be tracked.

Please notice that in previous 2.x versions neither `trackingServer` nor `storageServer` options are available. 
More specifically, in versions prior to 2.0.2 you only could set the recording option `dirPath`, to specify the path where you put smt2 (although the system will try to detect it automatically).


== Invoking recording script in old versions (2.0.0 branch) ==
Create an object named `smtRecordingOptions` with the properties that you want to customize BEFORE the above mentioned [http://code.google.com/p/smt2/wiki/readme#Including_the_record_script_on_your_page(s) 2 JavaScript lines]. Take this example page:
{{{
<html>

<head>

  <title>My document title</title>

  <script type="text/javascript">
  var smtRecordingOptions = { 
   recTime: 300,
   disabled: Math.round(Math.random()),
   warn: true, 
   warnText: "We are going to record your mouse movements for a remote usability study."
  };
  </script>

  <script type="text/javascript" src="/smt2/core/js/smt-aux.min.js"></script>  
  <script type="text/javascript" src="/smt2/core/js/smt-record.min.js"></script>

</head>

<body>
Your page content goes here...
</body>

</html>
}}}

Here we are telling that the record script will live for 300 seconds, and users will be selected randomly -- It seems that people want to track all their visits by default, so random sampling was removed on version 2.0.0. Additionally, the system will advice users with a custom message (they must agree to get recorded their mouse activity).

Note that the last property have no ending comma.

== Invoking recording script in newer versions (2.0.1 and above) ==

Now you must call the `smt2.record()` method explicitly.
This is how to invoke it, based on the previous example:
{{{
<html>

<head>

  <title>My document title</title>

  <script type="text/javascript" src="/smt2/core/js/smt-aux.min.js"></script>  
  <script type="text/javascript" src="/smt2/core/js/smt-record.min.js"></script>
  <script type="text/javascript">
  try {
    smt2.record({
      recTime: 300,
      disabled: Math.round(Math.random()),
      warn: true, 
      warnText: "We are going to record your mouse movements for a remote usability study."
    });
  } catch(err) {}
  </script>

</head>

<body>
Your page content goes here...
</body>

</html>
}}}

In this way, now there is more flexibility in customizing your own recording initializations.


= A note about privacy =

It is up to the webmaster enabling the `warn` property on `smt-record.js` script; however in some countries anyone who employs this type of user tracking should always inform the user. Furthermore, tracking of user actions should only happen for a limited amount of time. 

If you decide to warn users, a confirm dialog will prompt *before* the webpage is rendered to the browser. You can write your own code to display a fancy modal window (or DIV) instead, as [http://smt.speedzinemedia.com/comments.php#comment4976 this webmaster] did on his site. This is a good visual improvement, but unfortunately displaying a customized layered dialog instead of smt2's "ugly" javascript prompt will result in non-accurate users' metrics; e.g.: browsing time will be higher, mouse activity will be lower... and so on. 

*If you are using old 2.0.0 versions*, a better approach would be start recording the mouse activity and notify in some DIV on the page that she is being recorded -- i.e.: by not involving any awaiting prompt/dialog. In this way, if the user don't want to be considered in the tracking study, she could disable the recording script by simply clicking on a link that removes this user from database.

*If you are using newer versions (2.0.1 and above)*, you can tweak the initialization, as now the tracking script is called explicitly via JavaScript.


= Recording issues? =

Please take into account this checklist before reporting a new bug about _empty log cache_ or something similar:

 *  Server permissions. This may be the source of most of your problems. Concerning the _cache folder empty_ bug, take into account that the PHP process must have full read/write access in the `/admin/cache` dir. Setting dir permissions to 755 is enough (provided that PHP is the owner of that dir), although you can try wider access, such as 775 or even 777.
 * No firewall is blocking connections. Just loose your firewalls rules for smt2.
 * The root user is never tracked. Try to access your site from another browser or computer.
 * If you want to make cross-domain POSTs, you must have access to the filesystem of both domains, in order to upload the required files -- see [http://code.google.com/p/smt2/wiki/readme#Important_new_feature:_cross-domain_POSTs note].


= Working with the gathered data =

All recorded user visits can be managed on the _tracking report_ section of the CMS. The system will use the SWF visualization tool, if Flash plugin is available. Otherwise the JavaScript visualization API will be used (which is actually deprecated).

Read more about the CMS on the [http://code.google.com/p/smt2/wiki/CMS wiki page].