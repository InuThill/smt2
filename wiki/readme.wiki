#summary This an introductory page for describing the new smt2 version
#labels Featured


This first release is for beta testing purposes, so please follow these instructions carefully.


= Requirements =

Your web server needs a *MySQL 5* database and *PHP 5* installed with the *cURL library*. These settings are very common on most web servers. If you don't know if your server has these requirements, you will be adviced when installing the system.


= Download =

Downloads are available in a ZIP file both from the [http://smt.speedzinemedia.com/smt/downloads.php (smt) website] and the [http://code.google.com/p/smt2/downloads/list Project Downloads page].

Now there are provided two zipped files: 
 # The production version, ready for using on your webserver (~200 Kb).
 # The sources and API documentation (~350 Kb).

You can also download all the project (production, sources, documentation, etc.) from the [http://code.google.com/p/smt2/downloads/list Google code SVN].

= Installing =

The installation process is very similar to the well-known WordPress Content Management System (CMS), so the learning curve is supposed to be very soft.

It is recommended to put the system in a directory named `/smt2` on your localhost or production server.

== Steps ==

First of all, you must configure the basic stuff by editing the file `config.php` and typing your MySQL database settings. Then, just upload the `smt2` folder to your web server.

Assuming that you've uploaded the files to a server called `mysite.com`:

 # Open your Web browser and navigate to the URL `http://mysite.com/smt2/admin/sys/install.php`.
 # Enter your email and click the `Install` button. That email will be used to send you a new root password if you lose/forget it.
 # Once the installation process finishes, copy the generated password and log in (your username is *root*) to the CMS. You can change that password on the _users_ section.


= Including the record script on your page(s) =

You must add the following 2 lines to the HEAD of each document that you wish to track:
{{{
<script type="text/javascript" src="/smt2/core/js/smt-aux.min.js"></script>  
<script type="text/javascript" src="/smt2/core/js/smt-record.min.js"></script>
}}}
Note that order is mandatory: aux functions first.


= Customizing the recording options =

These are the *default* (smt)^2.0^ recording options that you can change:
{{{
// Tracking frequency, in frames per second.      
fps: 24, 	
// Tracking timeout, in seconds.
recTime: 120, 
// Path to smt2 installation. The record script will try to find it automatically!
smtPath: "/smt2", 
// You may choose to advice users (or not) that their mouse activity is going to be logged. 
warn: false, 
// Text to display when advising users (if warn is set to true).
warnText: "We'd like to track your mouse activity\nin order to improve this website's usability.\nDo you agree?", 
// Cookies lifetime (in days) to reset both first time users and agreed-to-track visitors
cookieDays: 365,
// Custom initialization routines. Here you can add more functionalities on init.
initFn: null,
// Random user selection. Setting it to false (or 0) means that all the population will be tracked.      
disabled: 0 //Math.round(Math.random()) // <-- random sampling is recommended!
}}}

To override these defaults you do not need to edit manually the record script. Just create an object named `smtRecordingOptions` with the properties that you want to customize BEFORE the above mentioned 2 JavaScript lines. Take this example page:
{{{
<html>

<head>

  <title>My document title</title>

  <script type="text/javascript">
  var smtRecordingOptions = { 
   recTime: 300,
   disabled: Math.round(Math.random()),
   warn:true, 
   warnText: "We are going to record your mouse movements for a remote usability study."
  };
  </script>

  <script type="text/javascript" src="/smt2/core/js/smt-aux.min.js"></script>  
  <script type="text/javascript" src="/smt2/core/js/smt-record.min.js"></script>

</head>

<body>
Your page content goes here...
</body>

</html>
}}}

Here we are telling that the record script will live for 300 seconds, and users will be selected randomly -- It seems that people want to track all their visits by default, so random sampling was removed on version 2.0.0. Additionally, the system will advice users with a custom message (they must agree to get recorded their mouse activity).

Note that the last property have no ending comma.

== A note about privacy ==

It is up to the webmaster enabling the `warn` property on `smt_record.js` script; however on some countries anyone who employs this type of user tracking should always inform the user about it. Furthermore, tracking of user actions should only happen for a limited amount of time. 

If you decide to warn users, a confirm dialog will prompt *before* the webpage is rendered to the browser. You can write your own code to display a fancy modal window (or DIV) instead, as [http://smt.speedzinemedia.com/smt/comments.php#comment4976 this webmaster] did on his site. This is a good visual improvement, but unfortunately displaying a customized layered dialog instead of smt2's "ugly" javascript prompt will result in non-accurate users' metrics; e.g.: browsing time will be higher, mouse activity will be lower... and so on. 

A better approach would be start recording the mouse activity and notify in some DIV on the page that she is being recorded -- i.e.: by not involving any awaiting prompt/dialog. In this way, if the user don't want to be considered in the tracking study, she could disable the recording script by simply clicking on a link that remove this user from database.

Another approach is on the way: to initialize explicitly the tracking script via JavaScript -- something like `smt2.init()`. That option will be included on version 2.0.1.


= Recording issues? =

Please take into account this checklist before reporting a new bug about _empty log cache_ or something similar:

 *  Server permissions. This may be the source of most of your problems. Concerning the _cache folder empty_ bug, take into account that the PHP process must have full read/write access in the `/admin/cache dir`. Setting dir permissions to 655 is enough, although you can try wider permissions, such as 665 or even 777.
 * No firewall is blocking connections. Just loose your firewalls rules for smt2.
 * The root user is never tracked. Try to access your site from another browser or computer.


= Working with the gathered data =

All recorded user visits can be managed on the _tracking report_ section of the CMS. It is recommended to use the SWF visualization tool, as it is dramatically more advanced and interactive than the JavaScript one.

Read more about the CMS on the [http://code.google.com/p/smt2/wiki/CMS wiki page].